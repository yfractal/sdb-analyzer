RSpec.describe Sdb::Analyzer::TimeConverter do
  it 'coverts time correctly' do
    # symbols which uses uptime as they are generated by eBPF
    # {"ts": 68384399968, "first_lineno": 25, "name": "fffffff", "path": "", "iseq_addr": 281473714360600, "to_addr": 0, "type": 0}
    # {"ts": 68386211242, "first_lineno": 0, "name": "", "path": "", "iseq_addr": 281473714360600, "to_addr": 281473714720760, "type": 7}
    # 
    # stacks, which ts is clock time
    # [0, 1739367653956162, 281473714183720, 281473714361760, 281473714361440, 281473714361120, 281473714361040, 281473714360600]
    # [0, 1739367655188407, 281473714183720, 281473714722760, 281473714722360, 281473714721880, 281473714721600, 281473714720760, 281473714747960]
    # 
    # time line '2025-02-12 13:40:53.956155043 [INFO] [time] uptime=68385000000, clock_time=1739367653956148'
    # 
    line = '2025-02-12 13:40:53.956155043 [INFO] [time] uptime=68385000000, clock_time=1739367653956148'
    time_converter = Sdb::Analyzer::TimeConverter.from_log(line)

    symbol_creation_time = time_converter.uptime_to_clock_time(68384399968)
    expect(symbol_creation_time).to eq 1739367653356116
    stack_time = 1739367653956162
    expect(stack_time - symbol_creation_time).to be > 0

    # the symbol has been moved other place
    symbol_moved_time = time_converter.uptime_to_clock_time(68386211242)
    expect(symbol_moved_time).to eq 1739367655167390
    prev_stack_time = 1739367653956162
    expect(prev_stack_time - symbol_moved_time).to be < 0
    stack_time = 1739367655188407
    expect(stack_time - symbol_moved_time).to be > 0
  end

end
